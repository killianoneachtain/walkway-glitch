<style>
    #map {
        width: 100%;
        height: 460px;
        background-color: grey;
    }
</style>
<h3>Start Location of Walkway : {{trail.trailname}}</h3>

<!--The div element for the map -->
<div id="map"></div>

<script>
    // Initialize and add the map
    function initMap() {
        // The location
        let trail_start = {lat: {{trail.startcoordinates.latitude}}, lng: {{trail.startcoordinates.longitude}}, title: 'Start' };
        //let trail_end = {lat: {{trail.endcoordinates.latitude}}, lng: {{end.startcoordinates.longitude}}, title: 'End' };
        // The map, centered
        let map = new google.maps.Map(
                document.getElementById('map'), {zoom: 17, center: trail_start, mapTypeId: 'hybrid'});
        // The marker, positioned
        let marker = new google.maps.Marker({position: trail_start, map: map, title: "Start {{trail.trailname}}"});
        //let end_marker = new google.maps.Marker({position: trail_end, map: map, title: "End {{trail.trailname}}"});

        marker.setMap(map);
    }
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key={{google_API}}&callback=initMap">
</script>